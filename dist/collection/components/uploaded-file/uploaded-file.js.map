{"version":3,"file":"uploaded-file.js","sourceRoot":"","sources":["../../../src/components/uploaded-file/uploaded-file.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Element, Watch, Host, h } from '@stencil/core'\nimport { Listen, Event, EventEmitter } from '@stencil/core'\nimport DirectUploadController from './direct-upload-controller'\nimport Max from './max'\nimport Accepts from './accepts'\nimport Extensions from './extensions'\nimport { get } from 'rails-request-json'\nimport { morph, html } from \"../../utils/utils\"\nimport '@botandrose/progress-bar'\n\nlet uid = 0\n\n@Component({\n  tag: 'uploaded-file',\n  styleUrl: 'uploaded-file.css',\n  shadow: true,\n})\nexport class UploadedFile {\n  @Element() el\n\n  @Prop({ reflect: true, mutable: true }) name: string\n  @Prop({ reflect: true, mutable: true }) accepts: string\n  @Prop({ reflect: true, mutable: true }) max: number\n  @Prop({ reflect: true, mutable: true }) url: string\n\n  @Prop({ reflect: true, mutable: true }) value: string = \"\"\n  @Prop({ reflect: true, mutable: true }) filename: string\n  @Prop({ reflect: true, mutable: true }) src: string\n  @Prop({ reflect: true, mutable: true }) filetype: string\n  @Prop({ reflect: true, mutable: true }) size: number\n  @Prop({ reflect: true, mutable: true }) state: string = \"complete\"\n  @Prop({ reflect: true, mutable: true }) percent: number = 100\n  @Prop({ reflect: true, mutable: true }) preview: boolean = true\n\n  @Prop() validationMessage: string\n\n  @Event({ eventName: \"uploaded-file:remove\" }) removeEvent: EventEmitter\n\n  private removeClicked = event => {\n    event.stopPropagation()\n    event.preventDefault()\n    this.controller?.cancel()\n    this.removeEvent.emit(this)\n  }\n\n  inputTarget: HTMLInputElement\n  controller: DirectUploadController\n  _file: File\n  uid: number\n\n  constructor() {\n    this.uid = uid++\n    this.inputTarget = html(`<input id=\"input-target-${this.uid}\">`) as HTMLInputElement\n  }\n\n  componentWillLoad() {\n    this.el.appendChild(this.inputTarget)\n    this.setMissingFiletype()\n  }\n\n  get file() {\n    return this._file\n  }\n\n  set file(file: any) {\n    this.src = URL.createObjectURL(file)\n    this.filename = file.name\n    this.size = file.size\n    this.state = \"pending\"\n    this.percent = 0\n    this._file = file\n  }\n\n  set signedId(val) {\n    if(this.value !== val) {\n      get(`/rails/active_storage/blobs/info/${val}`).then(blob => {\n        this.src = `/rails/active_storage/blobs/redirect/${val}/${blob.filename}`\n        this.filename = blob.filename\n        this.size = blob.byte_size\n        this.state = \"complete\"\n        this.percent = 100\n        this.value = val\n      })\n    }\n  }\n\n  @Watch(\"filename\")\n  setMissingFiletype(_value?, _previousValue?) {\n    if(!this.filetype && this.filename) {\n      this.filetype = Extensions.getFileType(this.filename)\n    }\n  }\n\n  @Listen(\"direct-upload:initialize\")\n  @Listen(\"direct-upload:start\")\n  start(_event) {\n    this.state = \"pending\"\n    this.percent = 0\n  }\n\n  @Listen(\"direct-upload:progress\")\n  progress(event) {\n    const { progress } = event.detail\n    this.percent = progress\n  }\n\n  @Listen(\"direct-upload:error\")\n  error(event) {\n    event.preventDefault()\n    const { error } = event.detail\n    this.state = \"error\"\n    this.inputTarget.setCustomValidity(error)\n  }\n\n  @Listen(\"direct-upload:end\")\n  end(_event) {\n    if(this.state !== \"error\") {\n      this.state = \"complete\"\n      this.percent = 100\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot>\n        </slot>\n        <figure>\n          <div class=\"progress-details\">\n            <progress-bar percent={this.percent} class={this.state}>\n              <a class=\"download-link\" href={this.src} download={this.filename} onClick={e => e.stopPropagation()}>\n                {this.filename}\n              </a>\n            </progress-bar>\n            <span class=\"progress-icon\"></span>\n            <a class=\"remove-media\" onClick={this.removeClicked} href=\"#\">\n              <span>Remove media</span>\n            </a>\n          </div>\n          {this.preview ? <file-preview src={this.src} filetype={this.filetype}></file-preview> : ''}\n        </figure>\n      </Host>\n    )\n  }\n\n  componentDidRender() {\n    morph(this.inputTarget, `\n      <input\n        id=\"input-target-${this.uid}\"\n        style=\"opacity: 0.01; width: 1px; height: 1px; z-index: -999; position: absolute;\"\n        name=\"${this.name}\"\n        value=\"${this.value}\"\n      >`)\n  }\n\n  componentDidLoad() {\n    if(this.checkValidity() && this.state == \"pending\") {\n      this.controller = new DirectUploadController(this.el)\n      this.controller.dispatch(\"initialize\", { controller: this.controller })\n    }\n  }\n\n  checkValidity() {\n    let errors = []\n    errors.push(...new Accepts(this).errors)\n    errors.push(...new Max(this).errors)\n    this.inputTarget.setCustomValidity(errors.join(\" \"))\n    this.inputTarget.reportValidity()\n    return errors.length === 0\n  }\n}\n"]}