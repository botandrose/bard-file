{"version":3,"file":"max.js","sourceRoot":"","sources":["../../../src/components/uploaded-file/max.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,OAAO,OAAO,GAAG;IACtB,YAAY,CAAc;IAE1B,YAAY,YAAY;QACtB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;IAClC,CAAC;IAED,IAAI,MAAM;QACR,IAAG,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC,OAAO,CAAA;QACpC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;QACjB,IAAG,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QACtC,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,OAAO,CAAe;IAEtB,aAAa;QACX,IAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG;YAAE,OAAO,IAAI,CAAA;QACtC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAA;IACxD,CAAC;IAED,IAAI,YAAY;QACd,OAAO;YACL,wBAAwB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG;YAClE,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG;YACrF,+BAA+B;SAChC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACb,CAAC;IAED,WAAW,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAC;QAC7B,IAAI,KAAK,KAAK,CAAC;YAAE,OAAO,SAAS,CAAC;QAElC,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,MAAM,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACvC,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAExE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,OAAO,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;CACF","sourcesContent":["import { UploadedFile } from './uploaded-file'\n\nexport default class Max {\n  uploadedFile: UploadedFile\n\n  constructor(uploadedFile) {\n    this.uploadedFile = uploadedFile\n  }\n\n  get errors() {\n    if(this.#errors) return this.#errors\n    this.#errors = []\n    if(!this.checkValidity()) {\n      this.#errors.push(this.errorMessage)\n    }\n    return this.#errors\n  }\n\n  #errors: Array<string>\n\n  checkValidity() {\n    if(!this.uploadedFile.max) return true\n    return this.uploadedFile.size <= this.uploadedFile.max\n  }\n\n  get errorMessage() {\n    return [\n      `Must be smaller than ${this.formatBytes(this.uploadedFile.max)},`,\n      `and \"${this.uploadedFile.filename}\" is ${this.formatBytes(this.uploadedFile.size)}.`,\n      `Please attach a smaller file.`,\n    ].join(\" \")\n  }\n\n  formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n  }\n}\n\n"]}