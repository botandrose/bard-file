{"file":"attachment-preview2.js","mappings":";;AAAA,MAAM,oBAAoB,GAAG,8EAA8E;;MCO9F,iBAAiB,iBAAAA,kBAAA,CAAA,MAAA,iBAAA,SAAA,WAAA,CAAA;;;;;;;;AACH,IAAA,GAAG;AACH,IAAA,QAAQ;IAEjC,MAAM,GAAA;AACJ,QAAA,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,EAAA,EAC7B,IAAI,CAAC,OAAO,EAAE,IAAI,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,GAAG,EAAE,IAAI,CAAC,GAAG,EAAI,CAAA,EACxC,IAAI,CAAC,OAAO,EAAE,IAAI,8DAAO,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAI,CAAA,EAC3D,IAAI,CAAC,OAAO,EAAE,IAAI,oCAAoC,EACvD,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACR;;IAIH,YAAY,GAAA;QAClB,IAAG,IAAI,CAAC,OAAO,EAAE;AAAE,YAAA,OAAO,OAAO;QACjC,IAAG,IAAI,CAAC,OAAO,EAAE;AAAE,YAAA,OAAO,OAAO;AACjC,QAAA,OAAO,OAAO;;IAGR,OAAO,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,QAAQ,IAAI,OAAO;;IAGzB,OAAO,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,QAAQ,IAAI,OAAO;;IAGzB,OAAO,GAAA;QACb,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;;;;;;AAI7C,MAAM,MAAM,GAAG,YAAA,EAAa,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,KAAK,CAAA,EAAE;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement"],"sources":["src/components/attachment-preview/attachment-preview.css?tag=attachment-preview&encapsulation=shadow","src/components/attachment-preview/attachment-preview.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-size: 13px;\n}\nimg, video {\n  max-width: 100%;\n  margin-top: 10px;\n}\n","import { Component, Prop, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'attachment-preview',\n  styleUrl: 'attachment-preview.css',\n  shadow: true,\n})\nexport class AttachmentPreview {\n  @Prop({ reflect: true }) src: string\n  @Prop({ reflect: true }) filetype: string\n\n  render() {\n    return (\n      <Host class={this.computeClass()}>\n        {this.isImage() && <img src={this.src} />}\n        {this.isVideo() && <video src={this.src} onClick={toggle} />}\n        {this.isOther() && \"This file does not offer a preview\"}\n        <slot></slot>\n      </Host>\n    );\n  }\n\n  private computeClass() {\n    if(this.isImage()) return \"image\"\n    if(this.isVideo()) return \"video\"\n    return \"other\"\n  }\n\n  private isImage() {\n    return this.filetype == \"image\"\n  }\n\n  private isVideo() {\n    return this.filetype == \"video\"\n  }\n\n  private isOther() {\n    return !this.isImage() && !this.isVideo()\n  }\n}\n\nconst toggle = function() { this.paused ? this.play() : this.pause(); return false }\n"],"version":3}